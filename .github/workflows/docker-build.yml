name: Build and Push Docker Image

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: [self-hosted]
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Оптимизация: Кэширование Node.js зависимостей
    - name: Cache Node.js dependencies
      uses: actions/cache@v4
      with:
        path: |
          organizer-app/node_modules
          ~/.npm
          ~/.cache/npm
        key: npm-${{ runner.os }}-${{ hashFiles('organizer-app/package-lock.json') }}
        restore-keys: |
          npm-${{ runner.os }}-

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        # Оптимизация Buildx для быстрой сборки
        driver-opts: |
          network=host
          env.BUILDKIT_STEP_LOG_MAX_SIZE=50000000
          env.BUILDKIT_STEP_LOG_MAX_SPEED=10000000

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix=sha-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: organizer-app
        # Оптимизация: собираем только AMD64 для быстроты (можно добавить ARM64 позже)
        platforms: linux/amd64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        # Многоуровневое кэширование
        cache-from: |
          type=gha,scope=main
          type=gha,scope=${{ github.ref_name }}
        cache-to: type=gha,mode=max,scope=${{ github.ref_name }}
        # Оптимизация Docker Buildx
        build-args: |
          BUILDKIT_INLINE_CACHE=1

    - name: Generate deployment artifact
      env:
        GITHUB_SHA: ${{ github.sha }}
      run: |
        echo "IMAGE_TAG=sha-${GITHUB_SHA::7}" >> deployment.env
        echo "IMAGE_URL=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:sha-${GITHUB_SHA::7}" >> deployment.env
    - name: Upload deployment artifact
      uses: actions/upload-artifact@v4
      with:
        name: deployment-info
        path: deployment.env
