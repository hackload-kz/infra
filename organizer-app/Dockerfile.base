# Base image with pre-installed dependencies for organizer-app
FROM node:20-alpine AS base

# Install system dependencies
RUN apk add --no-cache \
    libc6-compat \
    netcat-openbsd \
    wget \
    && rm -rf /var/cache/apk/*

WORKDIR /app

# Global npm optimizations
RUN npm config set registry https://registry.npmjs.org/ && \
    npm config set fetch-retries 3 && \
    npm config set fetch-retry-mintimeout 10000 && \
    npm config set fetch-retry-maxtimeout 60000 && \
    npm config set progress false && \
    npm config set loglevel error && \
    npm config set audit false && \
    npm config set fund false

# Copy package files
COPY package.json package-lock.json* ./

# Install ALL dependencies (both production and development)
# This will be our "fat" base image with everything pre-installed
RUN npm ci --include=dev --silent --no-audit --no-fund

# Pre-generate any global tools that might be needed
RUN npm list -g --depth=0

# Install Prisma CLI globally for convenience
RUN npm install -g prisma@^6.11.1

# Create user for security
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 nextjs

# Pre-create directories with proper permissions
RUN mkdir -p /app/.next /app/public /app/prisma && \
    chown -R nextjs:nodejs /app

# Set environment variables for optimal performance
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1
ENV SKIP_ENV_VALIDATION=1
ENV NPM_CONFIG_CACHE=/app/.npm-cache

# Create npm cache directory
RUN mkdir -p /app/.npm-cache && chown -R nextjs:nodejs /app/.npm-cache

# Labels for identification
LABEL org.opencontainers.image.title="Organizer App Base Image"
LABEL org.opencontainers.image.description="Base image with pre-installed dependencies for organizer-app"
LABEL org.opencontainers.image.source="https://github.com/hackload-infra/organizer-app"
LABEL maintainer="hackload-infra"

# Health check for the base image
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD node --version && npm --version || exit 1

# Default command to keep container running for debugging
CMD ["node", "--version"]